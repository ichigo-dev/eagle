//------------------------------------------------------------------------------
//! # Reactor
//------------------------------------------------------------------------------

use super::source::Source;

use std::sync::{ Arc, Mutex };


//------------------------------------------------------------------------------
/// # Reactor
//------------------------------------------------------------------------------
pub(crate) struct Reactor
{
    sources: Arc<Mutex<Vec<Source>>>
}

impl Reactor
{
    //--------------------------------------------------------------------------
    /// Creates a new Reactor.
    //--------------------------------------------------------------------------
    pub(crate) fn new() -> Self
    {
        Self
        {
            sources: Arc::new(Mutex::new(Vec::new()))
        }
    }

    //--------------------------------------------------------------------------
    /// Registers a new IO.
    //--------------------------------------------------------------------------
    pub(crate) fn register( &self, source: Source )
    {
        self.sources.lock().unwrap().push(source);
    }
}
